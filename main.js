(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{x:()=>w});var t=document.querySelectorAll(".popup"),n=document.querySelector("#popupAvatar"),r=document.querySelector("#popupEdit"),o=document.querySelector("#popupAdd"),c=document.querySelector("#popupImage"),a=document.querySelector("#popupDelete"),u=document.querySelector(".profile__image"),i=document.querySelector(".profile__edit-button"),l=document.querySelector(".profile__add-button"),s=document.querySelector("#avatar"),d=document.querySelector("#edit"),f=document.querySelector("#add"),m=document.querySelector("#delete"),p=document.querySelector("#url-avatar"),v=document.querySelector(".profile__title"),y=document.querySelector(".profile__text"),h=document.querySelector("#person-input"),_=document.querySelector("#about-input"),b=document.querySelector("#place-input"),S=document.querySelector("#url-input"),q=document.querySelector(".cards"),g=c.querySelector(".popup__image"),E=c.querySelector(".popup__text"),L={baseUrl:"https://nomoreparties.co/v1/wbc-cohort-1",headers:{authorization:"61650a97-0198-4977-9b18-131273aaff2f","Content-Type":"application/json"}};function k(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}function C(e){console.log(e)}function x(e){e.classList.remove("popup_opened"),document.removeEventListener("keydown",U)}function A(e){e.classList.add("popup_opened"),document.addEventListener("keydown",U)}function U(e){"Escape"===e.key&&x(document.querySelector(".popup_opened"))}var w,O=null;function j(e){var t=document.querySelector("#card-template").content.querySelector(".card__item").cloneNode(!0),n=t.querySelector(".card__image"),r=t.querySelector(".card__delete-button"),o=t.querySelector(".card__like-button"),u=t.querySelector(".card__like-counter");n.src=e.link,n.alt=e.name,t.id=e._id,t.querySelector(".card__title").textContent=e.name,u.textContent=e.likes.length,o.addEventListener("click",(function(){o.classList.contains("card__like-button_active")?function(e,t,n){return(r=e.id,fetch("".concat(L.baseUrl,"/cards/likes/").concat(r),{method:"DELETE",headers:L.headers}).then(k)).then((function(e){t.classList.remove("card__like-button_active"),n.textContent=e.likes.length})).catch(C);var r}(t,o,u):function(e,t,n){return(r=e.id,fetch("".concat(L.baseUrl,"/cards/likes/").concat(r),{method:"PUT",headers:L.headers}).then(k)).then((function(e){t.classList.add("card__like-button_active"),n.textContent=e.likes.length})).catch(C);var r}(t,o,u)}));for(var i=0;i<e.likes.length;i++)e.likes[i]._id===w&&o.classList.add("card__like-button_active");return r.addEventListener("click",(function(e){O=e.target.closest(".card__item"),A(a)})),e.owner._id!==w&&r.remove(),n.addEventListener("click",(function(){g.src=e.link,g.alt=e.name,E.textContent=e.name,A(c)})),t}function P(e,t){var n=document.querySelector(".".concat(e.id,"-error"));e.classList.remove(t.inputErrorClass),n.classList.remove(t.errorClass),n.textContent=""}function T(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);n.forEach((function(e){P(e,t)})),D(r,t)}function D(e,t){var n=t.inactiveButtonClass;e.classList.add(n),e.disabled=!0}function B(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?function(e,t){var n=t.inactiveButtonClass;e.classList.remove(n),e.disabled=!1}(t,n):D(t,n)}function I(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Сохранить";t.textContent=e?"Сохранение...":n}function N(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var J,H={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"};u.addEventListener("click",(function(){s.reset(),T(s,H),A(n)})),i.addEventListener("click",(function(){h.value=v.textContent,_.value=y.textContent,T(d,H),A(r)})),l.addEventListener("click",(function(){f.reset(),T(f,H),A(o)})),s.addEventListener("submit",(function(e){var t;e.preventDefault(),I(!0,e.submitter),(t=p.value,fetch("".concat(L.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:L.headers,body:JSON.stringify({avatar:t})}).then(k)).then((function(e){u.style.backgroundImage="url(".concat(e.avatar,")")})).then((function(){return x(n)})).finally((function(){I(!1,e.submitter)}))})),d.addEventListener("submit",(function(e){var t,n;e.preventDefault(),I(!0,e.submitter),(t=h.value,n=_.value,fetch("".concat(L.baseUrl,"/users/me"),{method:"PATCH",headers:L.headers,body:JSON.stringify({name:t,about:n})}).then(k)).then((function(e){v.textContent=e.name,y.textContent=e.about})).then((function(){return x(r)})).finally((function(){I(!1,e.submitter)}))})),f.addEventListener("submit",(function(e){var t,n;e.preventDefault(),I(!0,e.submitter),(t=b.value,n=S.value,fetch("".concat(L.baseUrl,"/cards"),{method:"POST",headers:L.headers,body:JSON.stringify({name:t,link:n})}).then(k)).then((function(e){q.prepend(j(e))})).then((function(){return x(o)})).finally((function(){I(!1,e.submitter)}))})),m.addEventListener("submit",(function(e){return e.preventDefault(),(t=O.id,fetch("".concat(L.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:L.headers}).then(k)).then((function(){O.remove(),x(a),O=null})).catch(C);var t})),t.forEach((function(e){e.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&x(e),t.target.classList.contains("popup__close-button")&&x(e)}))})),J=H,Array.from(document.querySelectorAll(J.formSelector)).forEach((function(e){!function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);B(n,r,t),n.forEach((function(e){e.addEventListener("input",(function(){(function(e,t){e.validity.valid?P(e,t):function(e,t,n){var r=document.querySelector(".".concat(e.id,"-error"));e.classList.add(n.inputErrorClass),r.classList.add(n.errorClass),r.textContent=t}(e,e.validationMessage,t)})(e,t),B(n,r,t)}))}))}(e,J)})),Promise.all([fetch("".concat(L.baseUrl,"/users/me"),{headers:L.headers}).then(k),fetch("".concat(L.baseUrl,"/cards"),{headers:L.headers}).then(k)]).then((function(e){var t=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(c.push(r.value),!t||c.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return c}}(e,t)||function(e,t){if(e){if("string"==typeof e)return N(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?N(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),n=t[0],r=t[1];w=n._id,v.textContent=n.name,y.textContent=n.about,u.style.backgroundImage="url(".concat(n.avatar,")"),console.log(n);for(var o=0;o<r.length;o++)q.append(j(r[o]));console.log(r)})).catch(C)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,