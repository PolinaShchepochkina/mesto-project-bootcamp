(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{k:()=>J,x:()=>t});var t,n=document.querySelectorAll(".popup"),r=document.querySelector("#popupAvatar"),o=document.querySelector("#popupEdit"),c=document.querySelector("#popupAdd"),a=document.querySelector("#popupImage"),u=document.querySelector("#popupDelete"),i=document.querySelector(".profile__image"),l=document.querySelector(".profile__edit-button"),s=document.querySelector(".profile__add-button"),d=document.querySelector("#avatar"),f=document.querySelector("#edit"),m=document.querySelector("#add"),p=document.querySelector("#delete"),v=document.querySelector("#url-avatar"),y=document.querySelector(".profile__title"),h=document.querySelector(".profile__text"),_=document.querySelector("#person-input"),S=document.querySelector("#about-input"),b=document.querySelector("#place-input"),q=document.querySelector("#url-input"),g=document.querySelector(".cards"),k=a.querySelector(".popup__image"),E=a.querySelector(".popup__text"),L={baseUrl:"https://nomoreparties.co/v1/wbc-cohort-1",headers:{authorization:"61650a97-0198-4977-9b18-131273aaff2f","Content-Type":"application/json"}};function C(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}function x(e){console.log(e)}function A(e){e.classList.remove("popup_opened"),document.removeEventListener("keydown",w)}function U(e){e.classList.add("popup_opened"),document.addEventListener("keydown",w)}function w(e){"Escape"===e.key&&A(document.querySelector(".popup_opened"))}function O(e){var n=document.querySelector("#card-template").content.querySelector(".card__item").cloneNode(!0),r=n.querySelector(".card__image"),o=n.querySelector(".card__delete-button"),c=n.querySelector(".card__like-button"),i=n.querySelector(".card__like-counter");r.src=e.link,r.alt=e.name,n.id=e._id,n.querySelector(".card__title").textContent=e.name,n.querySelector(".card__like-counter").textContent=e.likes.length,c.addEventListener("click",(function(){c.classList.contains("card__like-button_active")?function(e,t,n){return(r=e.id,fetch("".concat(L.baseUrl,"/cards/likes/").concat(r),{method:"DELETE",headers:L.headers}).then(C)).then((function(e){t.classList.remove("card__like-button_active"),n.textContent=e.likes.length})).catch(x);var r}(n,c,i):function(e,t,n){return(r=e.id,fetch("".concat(L.baseUrl,"/cards/likes/").concat(r),{method:"PUT",headers:L.headers}).then(C)).then((function(e){t.classList.add("card__like-button_active"),n.textContent=e.likes.length})).catch(x);var r}(n,c,i)}));for(var l=0;l<e.likes.length;l++)e.likes[l]._id===t&&c.classList.add("card__like-button_active");return o.addEventListener("click",(function(e){J=e.target.closest(".card__item"),U(u)})),e.owner._id!==t&&o.remove(),r.addEventListener("click",(function(){k.src=e.link,k.alt=e.name,E.textContent=e.name,U(a)})),n}function j(e,t){var n=document.querySelector(".".concat(e.id,"-error"));e.classList.remove(t.inputErrorClass),n.classList.remove(t.errorClass),n.textContent=""}function P(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);n.forEach((function(e){j(e,t)})),T(r,t)}function T(e,t){var n=t.inactiveButtonClass;e.classList.add(n),e.disabled=!0}function D(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?function(e,t){var n=t.inactiveButtonClass;e.classList.remove(n),e.disabled=!1}(t,n):T(t,n)}function B(e,t){t.querySelector(".form__submit-button").textContent=e?"Сохранение...":"Сохранить"}function I(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var N,J=null,H={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"};i.addEventListener("click",(function(){d.reset(),P(d,H),U(r)})),l.addEventListener("click",(function(){_.value=y.textContent,S.value=h.textContent,P(f,H),U(o)})),s.addEventListener("click",(function(){m.reset(),P(m,H),U(c)})),d.addEventListener("submit",(function(e){var t;e.preventDefault(),B(!0,r),(t=v.value,fetch("".concat(L.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:L.headers,body:JSON.stringify({avatar:t})}).then(C)).then((function(e){i.style.backgroundImage="url(".concat(e.avatar,")")})).then(A(r)).finally((function(){B(!1,r)}))})),f.addEventListener("submit",(function(e){var t,n;e.preventDefault(),B(!0,o),(t=_.value,n=S.value,fetch("".concat(L.baseUrl,"/users/me"),{method:"PATCH",headers:L.headers,body:JSON.stringify({name:t,about:n})}).then(C)).then((function(e){y.textContent=e.name,h.textContent=e.about})).then(A(o)).finally((function(){B(!1,o)}))})),m.addEventListener("submit",(function(e){var t,n;e.preventDefault(),B(!0,c),(t=b.value,n=q.value,fetch("".concat(L.baseUrl,"/cards"),{method:"POST",headers:L.headers,body:JSON.stringify({name:t,link:n})}).then(C)).then((function(e){g.prepend(O(e))})).then(A(c)).finally((function(){B(!1,c)}))})),p.addEventListener("submit",(function(e){return e.preventDefault(),(t=J.id,fetch("".concat(L.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:L.headers}).then(C)).then((function(){J.remove(),A(u),J=null})).catch(x);var t})),n.forEach((function(e){e.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&A(e),t.target.classList.contains("popup__close-button")&&A(e)}))})),N=H,Array.from(document.querySelectorAll(N.formSelector)).forEach((function(e){!function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);D(n,r,t),n.forEach((function(e){e.addEventListener("input",(function(){(function(e,t){e.validity.valid?j(e,t):function(e,t,n){var r=document.querySelector(".".concat(e.id,"-error"));e.classList.add(n.inputErrorClass),r.classList.add(n.errorClass),r.textContent=t}(e,e.validationMessage,t)})(e,t),D(n,r,t)}))}))}(e,N)})),Promise.all([fetch("".concat(L.baseUrl,"/users/me"),{headers:L.headers}).then(C),fetch("".concat(L.baseUrl,"/cards"),{headers:L.headers}).then(C)]).then((function(e){var n=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(c.push(r.value),!t||c.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return c}}(e,t)||function(e,t){if(e){if("string"==typeof e)return I(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?I(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),r=n[0],o=n[1];t=r._id,y.textContent=r.name,h.textContent=r.about,i.style.backgroundImage="url(".concat(r.avatar,")"),console.log(r);for(var c=0;c<o.length;c++)g.append(O(o[c]));console.log(o)})).catch(x)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,