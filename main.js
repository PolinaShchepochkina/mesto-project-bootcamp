(()=>{"use strict";var e=document.querySelector("#popupAvatar"),t=document.querySelector("#popupEdit"),n=document.querySelector("#popupAdd"),r=document.querySelector("#popupImage"),o=document.querySelector(".profile__image"),c=document.querySelector(".profile__edit-button"),a=document.querySelector(".profile__add-button"),u=document.querySelector("#avatar"),i=document.querySelector("#edit"),l=document.querySelector("#add"),d=document.querySelector("#url-avatar"),s=document.querySelector(".profile__title"),f=document.querySelector(".profile__text"),m=document.querySelector("#person-input"),p=document.querySelector("#about-input"),v=document.querySelector("#place-input"),_=document.querySelector("#url-input"),y=document.querySelector(".cards"),h=e.querySelector(".popup__close-button"),S=n.querySelector(".popup__close-button"),b=t.querySelector(".popup__close-button"),q=r.querySelector(".popup__close-button"),k=r.querySelector(".popup__image"),E=r.querySelector(".popup__text");function L(e,t){var n=document.querySelector(".".concat(e.id,"-error"));e.classList.remove(t.inputErrorClass),n.classList.remove(t.errorClass),n.textContent=""}function C(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);n.forEach((function(e){L(e,t)})),g(r,t)}function g(e,t){var n=t.inactiveButtonClass;e.classList.add(n),e.disabled=!0}function x(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?function(e,t){var n=t.inactiveButtonClass;e.classList.remove(n),e.disabled=!1}(t,n):g(t,n)}function A(e){e.classList.remove("popup_opened"),document.removeEventListener("keydown",T)}function U(e){e.classList.add("popup_opened"),document.addEventListener("keydown",T)}function N(e){e.target===e.currentTarget&&A(document.querySelector(".popup_opened"))}function T(e){"Escape"===e.key&&A(document.querySelector(".popup_opened"))}function O(e){var t=document.querySelector("#card-template").content.querySelector(".card__item").cloneNode(!0),n=t.querySelector(".card__image"),o=t.querySelector(".card__delete-button"),c=t.querySelector(".card__like-button"),a=t.querySelector(".card__like-counter");n.src=e.link,n.alt=e.name,t.id=e._id,t.querySelector(".card__title").textContent=e.name,t.querySelector(".card__like-counter").textContent=e.likes.length,c.addEventListener("click",(function(){!function(e,t,n){t.classList.contains("card__like-button_active")?(function(e,t){fetch("".concat(D.baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:D.headers,body:JSON.stringify({id:t,likes:e})}).then(J)}(B,e.id),t.classList.remove("card__like-button_active"),n.textContent=Number(n.textContent)-1):(function(e,t){fetch("".concat(D.baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:D.headers,body:JSON.stringify({id:t,likes:e})}).then(J)}(B,e.id),t.classList.add("card__like-button_active"),n.textContent=Number(n.textContent)+1)}(t,c,a)}));for(var u=0;u<e.likes.length;u++)e.likes[u]._id===B&&c.classList.add("card__like-button_active");return o.addEventListener("click",(function(){!function(e){return(t=e.id,fetch("".concat(D.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:D.headers,body:JSON.stringify({id:t})}).then(J)).then((function(){e.remove()})).catch(P);var t}(t)})),e.owner._id!==B&&o.remove(),n.addEventListener("click",(function(){k.src=e.link,k.alt=e.name,E.textContent=e.name,U(r)})),t}var B="",D={baseUrl:"https://nomoreparties.co/v1/wbc-cohort-1",headers:{authorization:"61650a97-0198-4977-9b18-131273aaff2f","Content-Type":"application/json"}};function J(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}function P(e){console.log(e)}function w(e,t){t.querySelector(".form__submit-button").textContent=e?"Сохранение...":"Сохранить"}function j(){return fetch("".concat(D.baseUrl,"/users/me"),{headers:D.headers}).then(J).then((function(e){B=e._id,s.textContent=e.name,f.textContent=e.about,o.style.backgroundImage="url(".concat(e.avatar,")")})).catch(P)}var H,I={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"};o.addEventListener("click",(function(t){t.preventDefault(),d.value="",C(u,I),U(e)})),c.addEventListener("click",(function(){m.value=s.textContent,p.value=f.textContent,C(i,I),U(t)})),a.addEventListener("click",(function(){v.value="",_.value="",C(l,I),U(n)})),u.addEventListener("submit",(function(t){t.preventDefault(),w(!0,e),fetch("".concat(D.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:D.headers,body:JSON.stringify({avatar:d.value})}).then(J).then(j).catch(P).finally((function(){w(!1,e)})),A(e)})),i.addEventListener("submit",(function(e){e.preventDefault(),w(!0,t),fetch("".concat(D.baseUrl,"/users/me"),{method:"PATCH",headers:D.headers,body:JSON.stringify({name:m.value,about:p.value})}).then(J).then(j).catch(P).finally((function(){w(!1,t)})),A(t)})),l.addEventListener("submit",(function(e){e.preventDefault(),w(!0,n),fetch("".concat(D.baseUrl,"/cards"),{method:"POST",headers:D.headers,body:JSON.stringify({name:v.value,link:_.value})}).then(J).then((function(e){y.prepend(O(e))})).catch(P).finally((function(){w(!1,n)})),A(n)})),e.addEventListener("click",N),t.addEventListener("click",N),n.addEventListener("click",N),r.addEventListener("click",N),h.addEventListener("click",(function(){A(e)})),b.addEventListener("click",(function(){A(t)})),S.addEventListener("click",(function(){A(n)})),q.addEventListener("click",(function(){A(r)})),H=I,Array.from(document.querySelectorAll(H.formSelector)).forEach((function(e){!function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);x(n,r,t),n.forEach((function(e){e.addEventListener("input",(function(){(function(e,t){e.validity.valid?L(e,t):function(e,t,n){var r=document.querySelector(".".concat(e.id,"-error"));e.classList.add(n.inputErrorClass),r.classList.add(n.errorClass),r.textContent=t}(e,e.validationMessage,t)})(e,t),x(n,r,t)}))}))}(e,H)})),j(),fetch("".concat(D.baseUrl,"/cards"),{headers:D.headers}).then(J).then((function(e){for(var t=0;t<e.length;t++)y.append(O(e[t]));console.log(e)})).catch(P)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,